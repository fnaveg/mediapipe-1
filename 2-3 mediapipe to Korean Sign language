
import cv2
import mediapipe as mp
import numpy as np
import time

mp_hands = mp.solutions.hands
# 그리기 툴 로드
mp_drawing = mp.solutions.drawing_utils


# 최대 인식할 손의 수
max_num_hands = 2
# 인식할 수 있는 제스처 번호, 제스처
gesture = {
    1:'ㄱ', 2:'ㄴ', 3:'ㄷ', 4:'ㄹ', 5:'ㅁ',6:'ㅂ' ,7:'ㅅ', 8:'ㅇ', 9:'ㅈ'
}
# 사용할 제스처 선택
rps_gesture = {1:'a', 2:'b', 3:'c',4:'d',5:'e',6:'f' ,7:'g', 8:'h', 9:'i'}
# 랜드마크 감지를 위한 함수
hands = mp_hands.Hands(
    max_num_hands=max_num_hands,
    min_detection_confidence=0.5,
    min_tracking_confidence=0.5)



# Gesture recognition model 제스처 인식 모델
# 손가락 각도들, 라벨이 저장된 파일(110개)
file = np.genfromtxt('data1.csv', delimiter=',')
angle = file[:,:-1].astype(np.float32)
label = file[:, -1].astype(np.float32)
# K-Nearest Neighbors K-최근접 알고리즘
knn = cv2.ml.KNearest_create()
# 학습````
knn.train(angle, cv2.ml.ROW_SAMPLE, label)


# 웹
def sw():

    datax=[]
    datay=[]
    for hand_landmarks in results.multi_hand_landmarks:
            
        for i in range(0,20):
                    if i not  in (0, 5, 9, 13, 17):
                        datax.append(float(hand_landmarks.landmark[i].x*100))
                        datay.append(float(hand_landmarks.landmark[i].y*100))
        angle=datax+datay


            # k가3일때 knn을 사용해 값을 구함
        try :
            data = np.array([angle], dtype=np.float32)
            ret, r, neighbours, dist = knn.findNearest(data, 3)
            print(ret,r,neighbours,dist)
            idx = int(r[0][0])
            if idx in gesture.keys():
                print(gesture[idx])
        except :
            pass
        
        
        
    



cap = cv2.VideoCapture(0)
# 웹캠에 성공적으로 액세스할 때까지 반복
while cap.isOpened():
    success, image = cap.read()
    if not success:
        print("Ignoring empty camera frame.")
        continue

    # MediaPipe Hands 처리 전 BGR을 RGB로 변경, 좌우반전(셀카뷰)
    image = cv2.cvtColor(cv2.flip(image, 1), cv2.COLOR_BGR2RGB)
    results = hands.process(image)
    image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    if results.multi_hand_landmarks is not None:
        # 손의 좌표 고정, 번역 버튼 , press 'h' your keybored Then it'll be translated
        if cv2.waitKey(1) & 0xFF == ord('h'):
            sw()
        rps_result = []
        datax=[]
        datay=[]
        for hand_landmarks in results.multi_hand_landmarks:
            
            for i in range(0,20):
                        if i not  in (0, 5, 9, 13, 17):
                            datax.append(float(hand_landmarks.landmark[i].x*100))
                            datay.append(float(hand_landmarks.landmark[i].y*100))
        angle=datax+datay


            # k가3일때 knn을 사용해 값을 구함
        try :   #try 에서 오류가 생기면 exept 가 실행 됨
            data = np.array([angle], dtype=np.float32)
            ret, r, neighbours, dist = knn.findNearest(data, 3)
        except :
            pass
        '''print(ret,r,neighbours,dist)'''
        idx = int(r[0][0])
        
    cv2.imshow('Translated', image)

    if cv2.waitKey(5) & 0xFF == 27:
        break

cap.release()
cv2.destroyAllWindows()

